<registry>
    <record name="collective.cover.controlpanel.ICoverSettings.available_tiles" interface="collective.cover.controlpanel.ICoverSettings" field="available_tiles">
        <field type="plone.registry.field.List">
            <default>
                <element>collective.cover.banner</element>
                <element>collective.cover.basic</element>
                <element>collective.cover.carousel</element>
                <element>collective.cover.collection</element>
                <element>collective.cover.contentbody</element>
                <element>collective.cover.embed</element>
                <element>collective.cover.file</element>
                <element>collective.cover.list</element>
                <element>collective.cover.richtext</element>
            </default>
            <description>This tiles will be available for layout creation.</description>
            <title>Available tiles</title>
            <value_type type="plone.registry.field.Choice">
                <vocabulary>collective.cover.EnabledTiles</vocabulary>
            </value_type>
        </field>
        <value>
            <element>collective.cover.banner</element>
            <element>collective.cover.basic</element>
            <element>collective.cover.carousel</element>
            <element>collective.cover.collection</element>
            <element>collective.cover.contentbody</element>
            <element>collective.cover.embed</element>
            <element>collective.cover.file</element>
            <element>collective.cover.list</element>
            <element>collective.cover.richtext</element>
            <element>liqd.ypart_theme.projekte_tile</element>
        </value>
    </record>
    <record name="collective.cover.controlpanel.ICoverSettings.layouts" interface="collective.cover.controlpanel.ICoverSettings" field="layouts">
        <field type="plone.registry.field.Dict">
            <key_type type="plone.registry.field.TextLine"/>
            <value_type type="plone.registry.field.TextLine"/>
        </field>
        <value>
            <element key="Empty layout">[{"type": "row", "class": "row", "children": [{"type": "group", "data":{"column-size":16, "layout-type":"column"}, "roles": ["Manager"]}]}]</element>
        </value>
    </record>
    <record name="collective.cover.controlpanel.ICoverSettings.searchable_content_types" interface="collective.cover.controlpanel.ICoverSettings" field="searchable_content_types">
        <field type="plone.registry.field.List">
            <default>
                <element>Collection</element>
                <element>Document</element>
                <element>File</element>
                <element>Form Folder</element>
                <element>Image</element>
                <element>Link</element>
                <element>News Item</element>
            </default>
            <description>Only objects of these content types will be searched on the content chooser.</description>
            <required>False</required>
            <title>Searchable Content Types</title>
            <value_type type="plone.registry.field.Choice">
                <vocabulary>collective.cover.AvailableContentTypes</vocabulary>
            </value_type>
        </field>
        <value>
            <element>Collection</element>
            <element>Document</element>
            <element>File</element>
            <element>Image</element>
            <element>Link</element>
            <element>News Item</element>
        </value>
    </record>
    <record name="collective.cover.controlpanel.ICoverSettings.styles" interface="collective.cover.controlpanel.ICoverSettings" field="styles">
        <field type="plone.registry.field.Set">
            <default/>
            <description>Enter a list of styles to appear in the style pulldown. Format is title|className, one per line.</description>
            <title>Styles</title>
            <value_type type="plone.registry.field.ASCIILine">
                <title>CSS Class</title>
            </value_type>
        </field>
        <value>
            <element>Border|tile-edge</element>
            <element>-Default-|tile-default</element>
            <element>Shadow|tile-shadow</element>
            <element>Dark Background|tile-dark</element>
        </value>
    </record>

    <record name="plone.cachepurging.interfaces.ICachePurgingSettings.cachingProxies" interface="plone.cachepurging.interfaces.ICachePurgingSettings" field="cachingProxies">
        <field type="plone.registry.field.Tuple">
            <description>Provide the URLs of each proxy to which PURGE requests shoudl be sent.</description>
            <title>Caching proxies</title>
            <value_type type="plone.registry.field.URI"/>
        </field>
        <value>
            <element>127.0.0.1:8000</element>
        </value>
    </record>
    <record name="plone.cachepurging.interfaces.ICachePurgingSettings.domains" interface="plone.cachepurging.interfaces.ICachePurgingSettings" field="domains">
        <field type="plone.registry.field.Tuple">
            <default/>
            <description>This option is only relevant if you are using virtual hosting and you have enabled the option to send PURGE requests with virtual hosting URLs above. If you your site is served on multiple domains e.g. http://example.org and http://www.example.org you may wish to purge both. If so, list all your domains here</description>
            <missing_value/>
            <required>False</required>
            <title>Domains</title>
            <value_type type="plone.registry.field.URI"/>
        </field>
        <value>
            <element>https://ypart-staticpages.liqd.net:443</element>
            <element>https://ypart-cms.liqd.net:443</element>
            <element>https://ypart-zmi.liqd.net:443</element>
            <element>http://ypart-staticpages.liqd.net:80</element>
            <element>http://localhost:8000</element>
            <element>http://127.0.0.1:8000</element>
        </value>
    </record>
    <record name="plone.cachepurging.interfaces.ICachePurgingSettings.enabled" interface="plone.cachepurging.interfaces.ICachePurgingSettings" field="enabled">
        <field type="plone.registry.field.Bool">
            <default>True</default>
            <description>If disabled, no purging will take place</description>
            <title>Enable purging</title>
        </field>
        <value>True</value>
    </record>
    <record name="plone.cachepurging.interfaces.ICachePurgingSettings.virtualHosting" interface="plone.cachepurging.interfaces.ICachePurgingSettings" field="virtualHosting">
        <field type="plone.registry.field.Bool">
            <default>False</default>
            <description>This option is only relevant if you are using virtual hosting with Zope's VirtualHostMonster. This relies on special tokens (VirtualHostBase and VirtualHostRoot) in the URL to instruct Zope about the types of URLs that the user sees. If virtual host URLs are in use and this option is set, PURGE requests will be sent to the caching proxy with the virtual hosting tokens in place. This makes sense if there is a web server in front of your caching proxy performing the rewrites necessary to translate a user-facing URL into a virtual hosting URL, so that the requests the caching proxy sees have the rewrite information in them. Conversely, if the rewrite is done in or behind the caching proxy, you want to disable this option, so that the PURGE requests use URLs that match those seen by the caching proxy as they come from the client.</description>
            <title>Send PURGE requests with virtual hosting paths</title>
        </field>
        <value>True</value>
    </record>
    <record name="plone.caching.interfaces.ICacheSettings.enabled" interface="plone.caching.interfaces.ICacheSettings" field="enabled">
        <field type="plone.registry.field.Bool">
            <default>False</default>
            <description>If not set, no caching operations will be attempted</description>
            <title>Globally enabled</title>
        </field>
        <value>True</value>
    </record>
    <record name="plone.caching.interfaces.ICacheSettings.operationMapping" interface="plone.caching.interfaces.ICacheSettings" field="operationMapping">
        <field type="plone.registry.field.Dict">
            <description>Maps rule set names to operation names</description>
            <key_type type="plone.registry.field.DottedName">
                <title>Rule set name</title>
            </key_type>
            <title>Rule set/operation mapping</title>
            <value_type type="plone.registry.field.DottedName">
                <title>Caching operation name</title>
            </value_type>
        </field>
        <value>
            <element key="plone.resource">plone.app.caching.strongCaching</element>
            <element key="plone.stableResource">plone.app.caching.strongCaching</element>
            <element key="plone.content.itemView">plone.app.caching.weakCaching</element>
            <element key="plone.content.feed">plone.app.caching.moderateCaching</element>
            <element key="plone.content.folderView">plone.app.caching.weakCaching</element>
            <element key="plone.content.file">plone.app.caching.moderateCaching</element>
        </value>
    </record>
    <record name="plone.caching.operations.chain.operations">
        <field type="plone.registry.field.List">
            <description>A list of operations to call, in order</description>
            <title>Operations</title>
            <value_type type="plone.registry.field.DottedName"/>
        </field>
        <value/>
    </record>

</registry>
